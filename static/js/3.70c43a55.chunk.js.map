{"version":3,"sources":["Profile/ProfileInfo/ProfileInfo.module.css","Profile/MyPosts/MyPosts.module.css","Profile/MyPosts/Post/Post.module.css","images/Red_Sea.jpg","images/YourAvatar.png","Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Profile/ProfileInfo/ProfileDataForm.jsx","Profile/ProfileInfo/ProfileInfo.jsx","Profile/Profile.jsx","Profile/MyPosts/Post/Post.jsx","Profile/MyPosts/MyPosts.jsx","Profile/MyPosts/MyPostsConteiner.jsx","Profile/ProfileConteiner.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","className","s","ProfileData","onSubmit","CreateField","ProfileInfo","React","memo","profile","isOwner","savePhoto","saveProfile","Preloader","content","src","Red_Sea","alt","descriptionBlock","photos","large","YourAvatar","initialValues","formData","goToEditMode","type","event","target","files","length","onClick","fullName","userId","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","contactTitle","contactValue","Contact","Profile","this","Component","Post","item","id","message","likesCount","maxLength100","maxLengthCreator","MyPosts","AddNewPostForm","required","button","posts","values","addPost","newPostText","post","reverse","connect","state","postsData","ProfileContainer","match","params","history","push","getProfileCreator","getStatus","refreshProfile","prevProps","prevState","snapshot","MyPostsConteiner","compose","auth","isAuth","setUserProfile","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.70c43a55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__26rU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__37mk9\",\"item\":\"MyPosts_item__m5iyZ\",\"button\":\"MyPosts_button__3HgGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2pVlQ\"};","module.exports = __webpack_public_path__ + \"static/media/Red_Sea.36a00c6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/YourAvatar.740763f6.png\";","import React, { useState, useEffect} from \"react\";\r\nimport \"./ProfileInfo.module.css\";\r\n//import s from \"./ProfileInfo.module.css\";\r\n//import Preloader from \"../../Common/Preloader/Preloader.js\";\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n  //--UseState returns array from dubble elements\r\n  // let stateWithSetState = useState(false);\r\n  // let editMode = stateWithSetState[0]; // - value\r\n  // let setEditMode = stateWithSetState[1]; // - function()\r\n\r\n  //--------------\"ComponentDidMount\"---------------------//\r\n  \r\n  //----destruction assaiment\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  //---------------\"ComponentDidUpdate\"-------------------//\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);//-зависимость от props.status !!!\r\n\r\n  const onStatusChange = e => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  //------------------------------------------------------//\r\n\r\n  const activateMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deActivateMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && ( //- if false show span\r\n        <div>\r\n          <span onDoubleClick={activateMode}>{props.status || \"------\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && ( // - if true show input\r\n        <div>\r\n          <input\r\n            // ref = {this.statusImput} VALUE IS STATIC!!!!!!\r\n            onChange={onStatusChange}\r\n            autoFocus={true} // - cursor inti focus\r\n            onBlur={deActivateMode} //defocus !!!\r\n            value={status}\r\n          />\r\n          {/* value={this.props.status} /> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {CreateField} from '../../Common/FormsControls/Forms';\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit}) => {\r\n    return  <div className={s.ProfileData}>\r\n        <form onSubmit = {handleSubmit}>\r\n          <div>\r\n              <button>Сохранить</button>\r\n          </div>\r\n          <div>\r\n            {CreateField(null, \"lookingForAJob\", \"input\", [], \"checkbox\", \"Шукаєш роботу?\")}\r\n          </div>\r\n          <div>\r\n            <b>Мої навички :</b> {CreateField(\"My skills\", \"lookingForAJobDescription\", \"textarea\", [], \"textarea\")}\r\n          </div>\r\n            <div>\r\n                Повне ім'я: {CreateField(\"Full name\", \"fullName\", \"input\", [], \"input\")}\r\n          </div>\r\n          \r\n          <div>\r\n            <b>Про мене:</b> {CreateField(\"About Me\", \"aboutMe\", \"textarea\", [], \"textarea\")}\r\n          </div>\r\n         \r\n             {/*\r\n          <div>\r\n            <b>Контакти:</b>{\" \"}\r\n            {Object.keys(profile.contacts).map(key => {\r\n              return (\r\n                <Contact\r\n                  contactTitle={key}\r\n                  contactValue={profile.contacts[key]}\r\n                />\r\n              );\r\n            })}\r\n          </div> */}\r\n        </form>\r\n      </div>\r\n}\r\n\r\n//---------Imortent Spesial Redux conteiner component!!!!!-----------//\r\n\r\nconst  ProfileDataFormReduxForm = reduxForm({\r\n    // a unique form name\r\n    form: \"edit-profile\"\r\n  })(ProfileDataForm); // - redux special conteiner component\r\n\r\n\r\nexport default  ProfileDataFormReduxForm;\r\n    \r\n    ","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader.js\";\r\nimport Red_Sea from \"../../images/Red_Sea.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks.jsx\";\r\nimport YourAvatar from \"../../images/YourAvatar.png\";\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = React.memo(\r\n  ({ profile, updateStatus, status, isOwner, savePhoto, saveProfile }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    //console.log(profile);\r\n\r\n    const onSubmit = formData => {\r\n     // console.log(formData);\r\n      saveProfile(formData);//-connect to BLL in ProfileConteiner!!!\r\n      setEditMode(false);\r\n     };// - saveProfile - thunk function from ProfileReduser !!!!!\r\n     // - NEW ASYNC AWAITS\r\n\r\n    const onMainPhotoSelected = event => {\r\n      if (event.target.files.length) {\r\n        savePhoto(event.target.files[0]);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className={s.content}>\r\n        <div>\r\n          <img src={Red_Sea} alt=\"fon\" />\r\n        </div>\r\n\r\n        <div className={s.descriptionBlock}>\r\n          <img src={profile.photos.large || YourAvatar} alt=\"Avatar\" />\r\n          <div>\r\n            <div>\r\n              <ProfileStatusWithHooks\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n              />\r\n            </div>\r\n            <div>\r\n              {editMode ? (\r\n                <ProfileDataForm initialValues = {profile} \r\n                onSubmit = {onSubmit} />\r\n              ) : (\r\n                <ProfileData profile={profile} isOwner={isOwner}\r\n                goToEditMode = {() => {setEditMode(true)}}/>\r\n              )}\r\n            </div>\r\n            <div>\r\n              {isOwner && (\r\n                <input type={\"file\"} onChange={onMainPhotoSelected} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div className={s.ProfileData}>\r\n      <div>{isOwner && <button onClick={goToEditMode}>Изменить</button>}</div>\r\n      <div>\r\n        <div>Повне ім'я: {profile.fullName}</div>\r\n      </div>\r\n      <div>\r\n        <div>Реєстраційний номер: {profile.userId}</div>\r\n      </div>\r\n      <div>\r\n        <b>Про мене:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <div>Чи шукаю роботу: {profile.lookingForAJob ? \"Так\" : \"Ні\"}</div>\r\n      </div>\r\n      <div>\r\n        <div>Чим займаюсь: {profile.lookingForAJobDescription}</div>\r\n      </div>\r\n      <div>\r\n        <b>Контакти:</b>{\" \"}\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <Contact contactTitle={key} contactValue={profile.contacts[key]} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}: </b>\r\n      {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React, {Component} from \"react\";\r\nimport \"./Profile.module.css\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo.jsx\";\r\n\r\n\r\nclass Profile extends Component {\r\n  \r\n    // shouldComponentUpdate(nextProps, nextState){\r\n    //   return false;\r\n    // }\r\n      render(){\r\n        // console.log \r\n        // ( this.props, this.state);\r\n        // console.log('Profile');\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo  profile = {this.props.profile}\r\n      status = {this.props.status}\r\n      updateStatus = {this.props.updateStatus}\r\n      isOwner={this.props.isOwner}\r\n      savePhoto={this.props.savePhoto}\r\n      saveProfile={this.props.saveProfile}/>\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"./Post.module.css\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img alt = 'avatar' src=\"https://www.meme-arsenal.com/memes/6e04ae9a90c6874a681e2c5d8cb5d046.jpg\"></img>\r\n      <div className={s.item}>\r\n        {props.id} {'.'} {props.message}\r\n        <div>\r\n          <span>Like</span> {props.likesCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport \"./MyPosts.module.css\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from '../../utils/validators/validators.js';\r\nimport {Element} from '../../Common/FormsControls/Forms.js';\r\nimport {CreateField} from '../../Common/FormsControls/Forms';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\n//const Textarea = Element(\"textarea\");\r\n\r\nconst MyPosts = React.memo(props => {\r\n  //let newPostElement = React.createRef(); // ссылка на textarea\r\n\r\n  // let onChangeNewPost = () => {\r\n  //   //-change inner text and send to state\r\n  //   let innerText = newPostElement.current.value;\r\n  //   props.updateNewPostText(innerText);\r\n  //   // props.dispatch({type: 'UPDATE-NEW-POST-TEXT', newText: innerText});\r\n  // };\r\n\r\n  let onAddPost = (values) => {\r\n    //let text = newPostElement.current.value;// - через current\r\n    props.addPost(values.newPostText); //-not needed text, get in state.newPostText\r\n    //props.dispatch({type: 'ADD-POST'});\r\n    // newPostElement.current.value = null; // - not good method\r\n    // props.updateNewPostText(''); // - remove all good mmethod,\r\n    //but better in state\r\n  };\r\n\r\n  let AddNewPostForm = props => {\r\n  //placeholder, name, component, maxLength, type, text, props\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        {CreateField(\"Post message\", \"newPostText\", \"textarea\", [required, maxLength100], \"textarea\")}\r\n        {/* <Field  name = \"newPostText\" component = {Textarea}\r\n          validate={[required, maxLength100]}\r\n          placeholder = {\"Post message.\"}\r\n          type=\"textarea\" /> */}\r\n\r\n          {/* <Field name = \"newPostText\" component = \"textarea\"\r\n          validate={[required, maxLength10]}/> */}\r\n          {/* <textarea\r\n            onChange={onChangeNewPost}\r\n            ref={newPostElement}\r\n            className={s.item}\r\n            value={props.newPostText}\r\n          /> */}\r\n        <div>\r\n          <button className={s.button}>\r\n            Enter\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  AddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})\r\n  (AddNewPostForm);\r\n\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      <AddNewPostForm onSubmit = {onAddPost}/>\r\n      <div>\r\n        <h2>My Posts</h2>\r\n        <div>\r\n          {[...props.posts].map(post => (\r\n            <Post\r\n              id={post.id}\r\n              message={post.message}\r\n              likesCount={post.likesCount}\r\n              key={post.id}\r\n            />\r\n          )).reverse()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n});\r\n\r\nexport default MyPosts;\r\n","//import React from \"react\";\r\nimport \"./MyPosts.module.css\";\r\nimport MyPosts from \"./MyPosts\";\r\n//import StoreContext from \"../../StoreContext\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost, \r\n // updateNewPostText, addPostActionCreator\r\n } from \"../../Redux/profileReducer\";\r\n// import { compose } from \"redux\";\r\n// import { withRouter } from \"react-router-dom\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.profile.postsData,\r\n    //newPostText: state.profile.newPostText\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//   addPost: (newPostText) => {\r\n//     dispatch(addPostActionCreator(newPostText));\r\n//   }\r\n// }\r\n// }\r\n\r\nexport default \r\n  connect(mapStateToProps,\r\n    //mapDispatchToProps \r\n    { addPost, \r\n     // updateNewPostText \r\n    }\r\n    )\r\n  (MyPosts);\r\n","import React from \"react\";\r\nimport Profile from \"./Profile.jsx\";\r\nimport {\r\n  setUserProfile,\r\n  getProfileCreator,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile\r\n} from \"../Redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport withAuthRedirect from \"../Hoc/withAuthRedirect.js\";\r\nimport { compose } from \"redux\";\r\nimport MyPostsConteiner from \"./MyPosts/MyPostsConteiner\";\r\n\r\n// - class component has a methods for possibility make request\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.userId;\r\n    }\r\n    if (!userId) {\r\n      userId = this.props.history.push(\"/login\");\r\n      //-faster to login !!!\r\n    }\r\n    this.props.getProfileCreator(userId);\r\n    this.props.getStatus(userId); // - ajax for status\r\n    // usersAPI.getProfile(userId).then(response => {\r\n    //   // - preloading disactive\r\n    //   this.props.setUserProfile(response);\r\n    // });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  // - for render tu my profile from guests !!!\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState){\r\n  //   return nextProps !== this.props || nextState !== this.state;\r\n  // }\r\n\r\n  render() {\r\n    //console.log('ProfileConteiner');\r\n    // let AuthRedirectComponent = withAuthRedirect (WithUrlDataConteinerComponent);\r\n    // - for class component all use THIS\r\n    //if (!this.props.isAuth) return <Redirect to={\"/login/\"} />;\r\n    // if (this.props.isAuth === false) return <Redirect to={\"/login/\"} />;\r\n    // - if not LOGIN function REDIRECT to LOGIN\r\n    // - add property is auth to \"mapStateToProps\"ProfileConteiner !!!\r\n\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          isOwner={!this.props.match.params.userId} //- if user ID = false\r\n          savePhoto={this.props.savePhoto}\r\n          saveProfile={this.props.saveProfile}\r\n        />\r\n        <MyPostsConteiner />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  status: state.profile.status,\r\n  userId: state.auth.id, // - status to props\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// - обертывание третьей сонтейнерной комронеттой\r\n//закидывающей данные из URL - withRouter\r\n//let WithUrlDataConteinerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps,\r\n//   { setUserProfile, getProfileCreator })\r\n//   (WithUrlDataConteinerComponent);\r\n\r\n//---------------Function COMPOSE from REDUX---------------------//\r\n\r\n//-ProfileConteiner to => withAuthRedirect => withRouter =>\r\n//connect (...) => default =>\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    getProfileCreator,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}